{ "typ": "page",
  "cre": "2018-01-16T19:02:29",
  "mod": "2018-01-16T20:51:36",
  "cui": "8b885ec8307ce15f",
  "stampTime": 0,
  "startPage": 16,
  "unlocked": false,
  "uuid": "d7c90c53",
  "cc": [
    { "typ": "resources",
      "cre": "2018-01-16T19:02:29",
      "mod": "2018-01-16T19:32:10",
      "uuid": "b334a227",
      "cc": [
        { "typ": "res",
          "cre": "2018-01-16T19:32:10",
          "mod": "2018-01-16T19:32:10",
          "archive": "_1_-0c5008aa.png",
          "desc": "",
          "preview": "",
          "source": "",
          "tag": "*1",
          "title": "",
          "uuid": "0c5008aa"
        }
      ]
    },
    { "typ": "title",
      "cre": "2018-01-16T19:02:29",
      "mod": "2018-01-16T19:02:37",
      "uuid": "378bd4fb",
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T19:02:29",
          "mod": "2018-01-16T19:02:37",
          "lines": [
            0
          ],
          "text": "Thinking about the parts list",
          "uuid": "f4725604"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T19:02:37",
      "mod": "2018-01-16T19:03:23",
      "h": 73.498,
      "ind": 0,
      "sheet": 0,
      "split": [ ],
      "uuid": "57dd1dad",
      "y0": 72.0,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T19:02:37",
          "mod": "2018-01-16T19:03:23",
          "lines": [
            0,
            60,
            124
          ],
          "text": "I want parts to be autonumbered when they are first dragged into the schematic. If the user then wishes to hide the labels, that’s fine, but each part should have a name.",
          "uuid": "92eacdb9"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T19:03:24",
      "mod": "2018-01-16T19:03:45",
      "h": 50.332,
      "ind": 1,
      "sheet": 0,
      "split": [ ],
      "uuid": "893b5ee2",
      "y0": 145.498,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T19:03:24",
          "mod": "2018-01-16T19:03:45",
          "lines": [
            0,
            61
          ],
          "text": "In the parts list, that name should be labeled “Ref.” rather than “Part.”",
          "uuid": "58391f99"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T19:03:57",
      "mod": "2018-01-16T19:04:46",
      "h": 50.332,
      "ind": 1,
      "sheet": 0,
      "split": [ ],
      "uuid": "9ec08fe8",
      "y0": 195.83,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T19:03:57",
          "mod": "2018-01-16T19:04:46",
          "lines": [
            0,
            62
          ],
          "text": "The parts list should have a bar where I can type things like “R7-9: 100k” and “D8: Mouser”.",
          "uuid": "b7b77d7f"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T19:04:57",
      "mod": "2018-01-16T19:18:34",
      "h": 281.992,
      "ind": 1,
      "sheet": 0,
      "split": [ ],
      "uuid": "7d1c1d51",
      "y0": 246.162,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T19:04:57",
          "mod": "2018-01-16T19:18:34",
          "lines": [
            0,
            62,
            119,
            184,
            242,
            299,
            357,
            419,
            477,
            538,
            599,
            666
          ],
          "text": "Packages should be listed there as well. I want to be able to say “DIP8” and “WDIP20” [wide DIP], “R300” [for a 0.300” spacing resistor-like element], “LED5” [for a 0.1” spaced LED of 5 mm ⌀], “TO220/GDS” [for a MOSFET in TO-220 package with GDS pinout], “C100” or “C200” [for an unpolarized radial capacitor] (or “C1” and “C2”, those could be synonyms for “C100” and “C200”), “CP1” [for a polarized radial capacitor], “teensy” [for the unusually wide teensy board], “scsi68”, “idc34” [for a flat cable connector], “molex156” [for 0.156” spaced molex; number of pins is automatic]. I want packaging to be automatically inferred if not given. In fact, I want default values to be suggested.",
          "uuid": "d6927fb7"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T19:14:48",
      "mod": "2018-01-16T19:30:01",
      "h": 258.826,
      "ind": 1,
      "sheet": 0,
      "split": [
        162.162
      ],
      "uuid": "216fb616",
      "y0": 528.154,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T19:14:48",
          "mod": "2018-01-16T19:30:01",
          "lines": [
            0,
            58,
            117,
            170,
            225,
            274,
            322,
            381,
            441,
            498,
            557
          ],
          "text": "I will have a special mapping file between cschem package names and geda/pcb package names. This is an xml file with stanzas like <package name=”r100” pcb=”ACY100”/>, or <package name=”cp1” pcb=”RCY100P” map=”pos=1 neg=2”/>, <package name=”led5” pcb=”LED5” map=”A=1 K=2”/>. “TO220/GDS” is grabbed by <package name=”to220” pcb=”TO220W”/>; the “/GDS” generates an implicit «map=”G=1 D=2 S=3”». (I might accept «map=”AK”» or «map=”pos,neg”» as shorthand for «map=”A=1 K=2”», etc.) My packages will be case-insensitive. Note that geda’s “TO220” is a lying-down version. I won’t try to do automatic generation of “DIPn”. ",
          "uuid": "ae300607",
          "cc": [
            { "typ": "markup",
              "cre": "2018-01-16T19:25:56",
              "mod": "2018-01-16T19:25:56",
              "end": 613,
              "start": 612,
              "style": 1,
              "uuid": "f0974402"
            }
          ]
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T19:14:48",
      "mod": "2018-01-16T19:30:29",
      "h": 50.332,
      "ind": 1,
      "sheet": 1,
      "split": [ ],
      "uuid": "216fb616",
      "y0": 168.664,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T19:14:48",
          "mod": "2018-01-16T19:30:29",
          "lines": [
            0,
            61
          ],
          "text": "I would like to be able to provide previews. The language of the “.fp” files in /usr/share/pcb/pcblib-newlib/ is pretty simple:",
          "uuid": "ae300607"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T19:30:39",
      "mod": "2018-01-16T19:31:17",
      "h": 197.347,
      "ind": 6,
      "sheet": 1,
      "split": [ ],
      "uuid": "780dbe42",
      "y0": 218.996,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T19:30:39",
          "mod": "2018-01-16T19:31:17",
          "lines": [
            0,
            62,
            105,
            107,
            139,
            171,
            212,
            259,
            294,
            331,
            349
          ],
          "text": "Element(0x00 \"Bottom lead polar circular component (typically capacitor)\" \"\" \"RCY100P\" 200 0 0 100 0x00)\n(\n    Pin(50 100 60 30 \"1\" 0x101)\n    Pin(150 100 60 30 \"2\" 0x01)\n    ElementArc(100 100 100 100 0 360 10)\n    ElementLine(-60 100            -20 100 10)\n    ElementLine(-40 80 -40 120 10)\n    ElementLine(220 100 260  100 10)\n    Mark (50 100)\n)",
          "uuid": "685280a5"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T19:31:22",
      "mod": "2018-01-16T19:32:09",
      "h": 27.166,
      "ind": 0,
      "sheet": 1,
      "split": [ ],
      "uuid": "81124399",
      "y0": 416.343,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T19:31:22",
          "mod": "2018-01-16T19:32:09",
          "lines": [
            0
          ],
          "text": "which looks like this:",
          "uuid": "5eb26219"
        }
      ]
    },
    { "typ": "gfxblock",
      "cre": "2018-01-16T19:32:10",
      "mod": "2018-01-16T19:32:33",
      "h": 99.7545,
      "sheet": 1,
      "split": [ ],
      "uuid": "a3f59e1b",
      "xref": 0.0,
      "y0": 443.509,
      "yref": -9.0,
      "cc": [
        { "typ": "gfximage",
          "cre": "2018-01-16T19:32:10",
          "mod": "2018-01-16T19:32:13",
          "cropBottom": 0.0,
          "cropLeft": 0.0,
          "cropRight": 0.0,
          "cropTop": 0.0,
          "height": 336.0,
          "res": [
            "*1"
          ],
          "resName": "*1",
          "scale": 0.243317,
          "uuid": "1b548657",
          "width": 470.0,
          "x": 0.0,
          "y": 0.0
        },
        { "typ": "gfxnote",
          "cre": "2018-01-16T19:32:22",
          "mod": "2018-01-16T19:32:33",
          "dx": 0.0,
          "dy": 0.0,
          "sheet": 0,
          "textWidth": 311.028,
          "uuid": "c65dc54a",
          "x": 138.972,
          "y": 19.009,
          "cc": [
            { "typ": "text",
              "cre": "2018-01-16T19:32:22",
              "mod": "2018-01-16T19:32:33",
              "lines": [
                0,
                50
              ],
              "text": "Note that the “+” is encoded as two “ElementLine” constructs.",
              "uuid": "c7add016"
            }
          ]
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T19:33:23",
      "mod": "2018-01-16T19:45:11",
      "h": 50.332,
      "ind": 1,
      "sheet": 1,
      "split": [ ],
      "uuid": "b4ff613f",
      "y0": 543.264,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T19:33:23",
          "mod": "2018-01-16T19:45:11",
          "lines": [
            0,
            57
          ],
          "text": "The “old” library files are much more complicated, since they use M4, but who cares.",
          "uuid": "75adf354"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T19:45:23",
      "mod": "2018-01-16T19:58:14",
      "h": 189.328,
      "ind": 1,
      "sheet": 1,
      "split": [
        92.664
      ],
      "uuid": "2a6e4c73",
      "y0": 593.596,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T19:45:23",
          "mod": "2018-01-16T19:58:14",
          "lines": [
            0,
            50,
            114,
            173,
            229,
            290,
            352,
            416
          ],
          "text": "<package name=“D300” pcb=“ALF300” map=”K=1 A=2”/> (yes, really, opposite polarity of “RCY100P” and “LED5”). For a single standard opamp, I could have <package name=”opamp1” pcb=”DIP8” map=”+=3 –=2 out=6” net=”Vdd=7 Vss=4”/>. (It would be nice to be able to draw a picture of that somehow.) For a dual opamp, I could have «A:+=3 A:–=2 A:out=1 B:+=5 …». Then, in the parts list I could perhaps write “[A1,A2]=OPA2350; opamp2” to group amplifiers A1 and A2 together.",
          "uuid": "ab7004fe",
          "cc": [
            { "typ": "markup",
              "cre": "2018-01-16T19:57:00",
              "mod": "2018-01-16T19:57:00",
              "end": 446,
              "start": 445,
              "style": 7,
              "uuid": "084cc677"
            },
            { "typ": "markup",
              "cre": "2018-01-16T19:57:03",
              "mod": "2018-01-16T19:57:03",
              "end": 453,
              "start": 452,
              "style": 7,
              "uuid": "2aa78ce9"
            },
            { "typ": "markup",
              "cre": "2018-01-16T19:57:04",
              "mod": "2018-01-16T19:57:04",
              "end": 452,
              "start": 451,
              "style": 1,
              "uuid": "f5567fb2"
            },
            { "typ": "markup",
              "cre": "2018-01-16T19:57:06",
              "mod": "2018-01-16T19:57:06",
              "end": 445,
              "start": 444,
              "style": 1,
              "uuid": "11def4bb"
            }
          ]
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T19:58:53",
      "mod": "2018-01-16T20:04:33",
      "h": 235.66,
      "ind": 1,
      "sheet": 2,
      "split": [ ],
      "uuid": "c8d07ee3",
      "y0": 168.664,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T19:58:53",
          "mod": "2018-01-16T20:04:33",
          "lines": [
            0,
            61,
            123,
            185,
            249,
            303,
            364,
            432,
            495,
            549
          ],
          "text": "The logic for power nets is this: I normally have power nets Vdd, Vcc, AGnd, DGnd, Gnd, Vee, Vss. Others may be defined by explicit ports. Any of these power nets that is not mentioned explicitly on the schematic, has default routing: Vcc ↔ Vdd are equated; AGnd ↔ Gnd ↔ DGnd are equated; Vee ↔ Vss are equated. Next up, Vee ↔ Gnd ↔ Vss are equated. If there is a net called “+12V” or similar (as long as it is > 5 V), that catches Vdd; “–15V” or similar, that catches Vss. “+5V”, “+3.3V”, etc. catch Vcc. “–5V” catches Vee, but I expect that to be vanishingly rare.",
          "uuid": "5502d214"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T20:05:06",
      "mod": "2018-01-16T20:06:28",
      "h": 73.498,
      "ind": 1,
      "sheet": 2,
      "split": [ ],
      "uuid": "b0b036a6",
      "y0": 404.324,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T20:05:06",
          "mod": "2018-01-16T20:06:28",
          "lines": [
            0,
            57,
            121
          ],
          "text": "Now, the parts list becomes pretty fancy, with the “[…]” syntax. I think that it will be best to pull the value, vendor, partno fields out of <element> and into a separate <part>.",
          "uuid": "8ad7d6cf"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T20:19:05",
      "mod": "2018-01-16T20:22:10",
      "h": 19.147,
      "ind": 3,
      "sheet": 2,
      "split": [ ],
      "uuid": "27741fec",
      "y0": 477.822,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T20:19:05",
          "mod": "2018-01-16T20:21:48",
          "lines": [
            0
          ],
          "text": "[I once again replaced the word “Part” with “Symbol”.]",
          "uuid": "ac3da8e5"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T20:21:52",
      "mod": "2018-01-16T20:24:28",
      "h": 119.83,
      "ind": 0,
      "sheet": 2,
      "split": [ ],
      "uuid": "9e284dce",
      "y0": 496.969,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T20:21:52",
          "mod": "2018-01-16T20:24:28",
          "lines": [
            0,
            61,
            128,
            193,
            255
          ],
          "text": "The only attribute that would remain inside <element> is the name, which really is the reference, but I’ll keep calling it name inside the code, because I cannot possibly rename all instances, plus “ref” could be confusing in QSharedData. Should I rename it in the xml? No.",
          "uuid": "5c820f4d"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T20:24:43",
      "mod": "2018-01-16T20:25:50",
      "h": 73.498,
      "ind": 1,
      "sheet": 2,
      "split": [ ],
      "uuid": "9548adf4",
      "y0": 616.799,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T20:24:43",
          "mod": "2018-01-16T20:25:50",
          "lines": [
            0,
            62,
            123
          ],
          "text": "Do I really need to pull <part> out of <element>? I think so, because there is no other obvious way to create an “[A1,A2]” item.",
          "uuid": "3adda3a9"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T20:27:33",
      "mod": "2018-01-16T20:30:35",
      "h": 189.328,
      "ind": 1,
      "sheet": 3,
      "split": [ ],
      "uuid": "3bec5a25",
      "y0": 72.0,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T20:27:33",
          "mod": "2018-01-16T20:30:35",
          "lines": [
            0,
            59,
            113,
            175,
            239,
            301,
            362,
            420
          ],
          "text": "Now. When I first create an element, there simply is not a <part> line for it. A part line gets generated in two circumstances: When a value gets defined in the schematic, or when something happens in the parts list view. Each line in the parts list view corresponds to a <part>, which can correspond to one or more <elements>. A <part> has its own id which has nothing to do with the id of the corresponding <element>. Rather, they are linked by the name. Here are two <parts>:",
          "uuid": "53b26d06",
          "cc": [
            { "typ": "markup",
              "cre": "2018-01-16T20:28:14",
              "mod": "2018-01-16T20:28:14",
              "end": 140,
              "start": 135,
              "style": 1,
              "uuid": "6aaf22e9"
            },
            { "typ": "markup",
              "cre": "2018-01-16T20:29:42",
              "mod": "2018-01-16T20:29:42",
              "end": 351,
              "start": 349,
              "style": 1,
              "uuid": "508093d3"
            },
            { "typ": "markup",
              "cre": "2018-01-16T20:29:52",
              "mod": "2018-01-16T20:29:52",
              "end": 387,
              "start": 385,
              "style": 1,
              "uuid": "8c6b4fe1"
            },
            { "typ": "markup",
              "cre": "2018-01-16T20:30:12",
              "mod": "2018-01-16T20:30:12",
              "end": 455,
              "start": 451,
              "style": 1,
              "uuid": "c5787b73"
            }
          ]
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T20:30:36",
      "mod": "2018-01-16T20:31:30",
      "h": 36.967,
      "ind": 6,
      "sheet": 3,
      "split": [ ],
      "uuid": "77e64b41",
      "y0": 261.328,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T20:30:36",
          "mod": "2018-01-16T20:31:30",
          "lines": [
            0,
            54
          ],
          "text": "<part name=”R1” id=”301” value=”10 kΩ” package=”R500” notes=”1W”/>",
          "uuid": "701f616d"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T20:31:31",
      "mod": "2018-01-16T20:32:16",
      "h": 36.967,
      "ind": 6,
      "sheet": 3,
      "split": [ ],
      "uuid": "f773ad24",
      "y0": 298.295,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T20:31:31",
          "mod": "2018-01-16T20:32:16",
          "lines": [
            0,
            46
          ],
          "text": "<part name=”[A1,A2]” id=”302” value=”OPA2350” package=”opamp2”/>",
          "uuid": "9dd40ecb"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T20:32:04",
      "mod": "2018-01-16T20:39:43",
      "h": 142.996,
      "ind": 0,
      "sheet": 3,
      "split": [ ],
      "uuid": "c729977c",
      "y0": 335.262,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T20:32:04",
          "mod": "2018-01-16T20:39:43",
          "lines": [
            0,
            65,
            130,
            193,
            249,
            303
          ],
          "text": "The parts list view should notify the scene (ideally not through a signal; those are supposed to be used for optional notices) of value changes. The appropriate label for A1 in this case is “½ OPA2350,” although plain “OPA2350” might be OK too. For logic elements, I might use U1.1 through U1.6 for the subcomponents. In that case, ",
          "uuid": "fe09b7c2",
          "cc": [
            { "typ": "markup",
              "cre": "2018-01-16T20:33:02",
              "mod": "2018-01-16T20:33:02",
              "end": 172,
              "start": 171,
              "style": 1,
              "uuid": "df14daf5"
            },
            { "typ": "markup",
              "cre": "2018-01-16T20:33:02",
              "mod": "2018-01-16T20:33:02",
              "end": 173,
              "start": 172,
              "style": 7,
              "uuid": "5b9faf99"
            },
            { "typ": "markup",
              "cre": "2018-01-16T20:34:08",
              "mod": "2018-01-16T20:34:08",
              "end": 278,
              "start": 277,
              "style": 1,
              "uuid": "c6013dd5"
            },
            { "typ": "markup",
              "cre": "2018-01-16T20:34:12",
              "mod": "2018-01-16T20:34:12",
              "end": 281,
              "start": 278,
              "style": 7,
              "uuid": "bae50b73"
            },
            { "typ": "markup",
              "cre": "2018-01-16T20:34:14",
              "mod": "2018-01-16T20:34:14",
              "end": 291,
              "start": 290,
              "style": 1,
              "uuid": "fa0bd71c"
            },
            { "typ": "markup",
              "cre": "2018-01-16T20:34:17",
              "mod": "2018-01-16T20:34:17",
              "end": 294,
              "start": 291,
              "style": 7,
              "uuid": "7e8788d8"
            }
          ]
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T20:34:28",
      "mod": "2018-01-16T20:34:50",
      "h": 19.147,
      "ind": 2,
      "sheet": 3,
      "split": [ ],
      "uuid": "e8183294",
      "y0": 478.258,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T20:34:28",
          "mod": "2018-01-16T20:34:47",
          "lines": [
            0
          ],
          "text": "<part name=”U1” id=302” value=”74LS08” package=”DIP14”/>",
          "uuid": "95836111"
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T20:34:52",
      "mod": "2018-01-16T20:35:45",
      "h": 73.498,
      "ind": 0,
      "sheet": 3,
      "split": [ ],
      "uuid": "2db59917",
      "y0": 497.405,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T20:34:52",
          "mod": "2018-01-16T20:35:45",
          "lines": [
            0,
            61,
            124
          ],
          "text": "would be a sensible part definition. Would I want U1.4 to be labeled as “⅙ 74LS08”? Or just “74LS08”? Probably, this should be a setting somewhere.",
          "uuid": "0d02c6d9",
          "cc": [
            { "typ": "markup",
              "cre": "2018-01-16T20:35:08",
              "mod": "2018-01-16T20:35:08",
              "end": 51,
              "start": 50,
              "style": 1,
              "uuid": "1376443a"
            },
            { "typ": "markup",
              "cre": "2018-01-16T20:35:10",
              "mod": "2018-01-16T20:35:10",
              "end": 54,
              "start": 51,
              "style": 7,
              "uuid": "fbb7daa1"
            }
          ]
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T20:36:51",
      "mod": "2018-01-16T20:38:41",
      "h": 96.664,
      "ind": 1,
      "sheet": 3,
      "split": [ ],
      "uuid": "ce5fb0d1",
      "y0": 570.903,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T20:36:51",
          "mod": "2018-01-16T20:38:41",
          "lines": [
            0,
            61,
            126,
            183
          ],
          "text": "Would it be a good idea to have each <part> contain an eltid attribute, so that the link is not broken in a rename operation? Otherwise, a rename would have to be explicitly signaled between the scene and the part list view.",
          "uuid": "fbeb265f",
          "cc": [
            { "typ": "markup",
              "cre": "2018-01-16T20:37:02",
              "mod": "2018-01-16T20:37:02",
              "end": 60,
              "start": 55,
              "style": 1,
              "uuid": "43b3e0d2"
            }
          ]
        }
      ]
    },
    { "typ": "textblock",
      "cre": "2018-01-16T20:42:05",
      "mod": "2018-01-16T20:51:36",
      "h": 281.992,
      "ind": 1,
      "sheet": 3,
      "split": [
        23.166
      ],
      "uuid": "3dede8dc",
      "y0": 667.567,
      "cc": [
        { "typ": "text",
          "cre": "2018-01-16T20:42:05",
          "mod": "2018-01-16T20:51:36",
          "lines": [
            0,
            56,
            123,
            181,
            240,
            299,
            359,
            422,
            480,
            548,
            610,
            675
          ],
          "text": "Right now, a Scene gets constructed with a pointer to a nonconst Library, and its Circuit gets set once by Editor. I think that is not a good thing. It would be better if the Scene contained a Schem, and allows the part list view selective access to it through MainWindow. The part list view can do things like updatePart(Part const &) and renamePart(QString oldname, QString newname) to the scene. In fact, the part list should probably have direct access to the scene. When the scene changes a value, it can signal this for the part list to pick up on, and when it renames a part, ditto. The parts list view does not direcly operate on the Schem; it relies on the Scene to effect changes.",
          "uuid": "05038172"
        }
      ]
    }
  ]
}
